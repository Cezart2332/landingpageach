!function(){const e={BASE_URL:"https://api.acoomh.ro",TIMEOUT:3e4},t={},s=function(){try{if(window.sessionStorage)return window.sessionStorage}catch{}return{getItem:e=>t[e]??null,setItem:(e,s)=>{t[e]=String(s)},removeItem:e=>{delete t[e]},key:e=>Object.keys(t)[e]??null,get length(){return Object.keys(t).length}}}(),r=function(){try{if(window.localStorage)return window.localStorage}catch{}return{getItem:e=>t[`p_${e}`]??null,setItem:(e,s)=>{t[`p_${e}`]=String(s)},removeItem:e=>{delete t[`p_${e}`]},key:e=>Object.keys(t)[e]??null,get length(){return Object.keys(t).length}}}(),n={get(e){try{return s.getItem(e)}catch{return null}},set(e,t){try{s.setItem(e,t)}catch{}},remove(e){try{s.removeItem(e)}catch{}},multiSet(e){try{e.forEach(([e,t])=>s.setItem(e,t))}catch{}},multiRemove(e){try{e.forEach(e=>s.removeItem(e))}catch{}},getAllKeys(){try{const e=[];for(let t=0;t<s.length;t++){const r=s.key(t);r&&e.push(r)}return e}catch{return[]}}},o={get(e){try{return r.getItem(e)}catch{return null}},set(e,t){try{r.setItem(e,t)}catch{}},remove(e){try{r.removeItem(e)}catch{}},multiSet(e){try{e.forEach(([e,t])=>r.setItem(e,t))}catch{}},multiRemove(e){try{e.forEach(e=>r.removeItem(e))}catch{}},getAllKeys(){try{const e=[];for(let t=0;t<r.length;t++){const s=r.key(t);s&&e.push(s)}return e}catch{return[]}}};function fetchWithTimeout(t,s={}){const{timeout:r=e.TIMEOUT,...n}=s,o=new AbortController,a=setTimeout(()=>o.abort(),r);return fetch(t,{...n,signal:o.signal}).finally(()=>clearTimeout(a))}const a={async storeTokens(e,t){n.multiSet([["access_token",e],["refresh_token",t],["token_stored_at",String(Date.now())]]),o.multiSet([["access_token",e],["refresh_token",t],["token_stored_at",String(Date.now())]])},getAccessToken:async()=>n.get("access_token")||o.get("access_token"),getRefreshToken:async()=>n.get("refresh_token")||o.get("refresh_token"),async clearTokens(){n.multiRemove(["access_token","refresh_token","token_stored_at","company","user","loggedIn"]),o.multiRemove(["access_token","refresh_token","token_stored_at","company","user","loggedIn"])},async areTokensExpired(){const e=n.get("token_stored_at")||o.get("token_stored_at");return!e||Date.now()-parseInt(e,10)>9e5},async rehydrateSessionFromPersist(){try{const e=o.get("access_token"),t=o.get("refresh_token"),s=o.get("token_stored_at");e&&t&&(n.multiSet([["access_token",e],["refresh_token",t]]),s&&n.set("token_stored_at",s));const r=o.get("company"),a=o.get("user"),c=o.get("loggedIn");return r&&n.set("company",r),a&&n.set("user",a),c&&n.set("loggedIn",c),!(!e||!t)}catch{return!1}}},c={accessToken:null,refreshToken:null,isRefreshing:!1,refreshPromise:null,async initialize(){if(this.accessToken=await a.getAccessToken(),this.refreshToken=await a.getRefreshToken(),!this.accessToken||!this.refreshToken){await a.rehydrateSessionFromPersist()&&(this.accessToken=await a.getAccessToken(),this.refreshToken=await a.getRefreshToken())}},async makeSecureRequest(t,s={}){let r=`${e.BASE_URL}${t}`;this.accessToken||await this.initialize();const n=s.headers?{...s.headers}:{};n.Accept||(n.Accept="application/json");let o=s.body;const c="undefined"!=typeof FormData&&o instanceof FormData;!o||c||n["Content-Type"]||(n["Content-Type"]="application/json"),o&&"application/json"===n["Content-Type"]&&"string"!=typeof o&&(o=JSON.stringify(o)),this.accessToken&&(n.Authorization=`Bearer ${this.accessToken}`);let i=await fetchWithTimeout(r,{...s,headers:n,body:o});if(401===i.status&&this.refreshToken){if(await this.refreshAccessToken()){const e=await a.getAccessToken();e&&(n.Authorization=`Bearer ${e}`,i=await fetchWithTimeout(r,{...s,headers:n,body:o}))}}const h=i.ok;let u,k;try{const e=await i.text();e&&(u=JSON.parse(e))}catch(e){k=`Failed to parse response: ${e}`}return h||k||(k=`HTTP ${i.status}: ${i.statusText}`),{data:u,error:k,status:i.status,success:h}},async refreshAccessToken(){if(this.isRefreshing&&this.refreshPromise)try{return await this.refreshPromise,!!this.accessToken}catch{return!1}if(!this.refreshToken)return!1;this.isRefreshing=!0,this.refreshPromise=(async()=>{try{const t=await fetchWithTimeout(`${e.BASE_URL}/auth/refresh`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refreshToken:this.refreshToken})});if(!t.ok)return null;const s=await t.json();return this.accessToken=s.accessToken,this.refreshToken=s.refreshToken,await a.storeTokens(this.accessToken,this.refreshToken),this.accessToken}catch{return null}})();try{return!!await this.refreshPromise}finally{this.isRefreshing=!1,this.refreshPromise=null}},async login({username:e,password:t}){const s=await this.makeSecureRequest("/auth/company-login",{method:"POST",body:{Email:e,Password:t}});if(s.success&&s.data){const{accessToken:e,refreshToken:t}=s.data;e&&t&&(await a.storeTokens(e,t),this.accessToken=e,this.refreshToken=t);const r=s.data.company?{type:"Company",...s.data.company}:s.data.user?{type:"User",...s.data.user}:null;if(r){const e="Company"===r.type?"company":"user",t=JSON.stringify(r);n.set(e,t),n.set("loggedIn","true"),o.set(e,t),o.set("loggedIn","true")}}return s},async register(e){return this.makeSecureRequest("/auth/company-register",{method:"POST",body:e})},async registerWithFile(e){return this.makeSecureRequest("/auth/company-register",{method:"POST",body:e})},async logout(){try{this.refreshToken&&await this.makeSecureRequest("/auth/logout",{method:"POST",body:{refreshToken:this.refreshToken}})}catch{}this.accessToken=null,this.refreshToken=null,await a.clearTokens()},async isAuthenticated(){if(await this.initialize(),!this.accessToken||!this.refreshToken)return!1;if(await a.areTokensExpired()){if(!await this.refreshAccessToken())return!1;this.accessToken=await a.getAccessToken(),this.refreshToken=await a.getRefreshToken()}return!!this.accessToken},get(e){return this.makeSecureRequest(e,{method:"GET"})},post(e,t){const s={method:"POST"};return t&&(t instanceof FormData?s.body=t:(s.body=t,s.headers={"Content-Type":"application/json"})),this.makeSecureRequest(e,s)},put(e,t){const s={method:"PUT"};return t&&(t instanceof FormData?s.body=t:(s.body=t,s.headers={"Content-Type":"application/json"})),this.makeSecureRequest(e,s)},delete(e){return this.makeSecureRequest(e,{method:"DELETE"})},getProfile(){return this.get("/auth/company-me")}};window.SecureApiService=c}();