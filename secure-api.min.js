!function(){const e={BASE_URL:"https://api.acoomh.ro",TIMEOUT:3e4},t={},s=function(){try{if(window.localStorage)return window.localStorage}catch{}return{getItem:e=>t[`p_${e}`]??null,setItem:(e,s)=>{t[`p_${e}`]=String(s)},removeItem:e=>{delete t[`p_${e}`]},key:e=>Object.keys(t)[e]??null,get length(){return Object.keys(t).length}}}(),r={get(e){try{return s.getItem(e)}catch{return null}},set(e,t){try{s.setItem(e,t)}catch{}},remove(e){try{s.removeItem(e)}catch{}},multiSet(e){try{e.forEach(([e,t])=>s.setItem(e,t))}catch{}},multiRemove(e){try{e.forEach(e=>s.removeItem(e))}catch{}},getAllKeys(){try{const e=[];for(let t=0;t<s.length;t++){const r=s.key(t);r&&e.push(r)}return e}catch{return[]}}};function fetchWithTimeout(t,s={}){const{timeout:r=e.TIMEOUT,...n}=s,o=new AbortController,a=setTimeout(()=>o.abort(),r);return fetch(t,{...n,signal:o.signal}).finally(()=>clearTimeout(a))}const n={async storeTokens(e,t){r.multiSet([["access_token",e],["refresh_token",t],["token_stored_at",String(Date.now())]])},getAccessToken:async()=>r.get("access_token"),getRefreshToken:async()=>r.get("refresh_token"),async clearTokens(){r.multiRemove(["access_token","refresh_token","token_stored_at","company","user","loggedIn"])},async areTokensExpired(){const e=r.get("token_stored_at");return!e||Date.now()-parseInt(e,10)>9e5}},o={accessToken:null,refreshToken:null,isRefreshing:!1,refreshPromise:null,async initialize(){this.accessToken=await n.getAccessToken(),this.refreshToken=await n.getRefreshToken()},async makeSecureRequest(t,s={}){let r=`${e.BASE_URL}${t}`;this.accessToken||await this.initialize();const o=s.headers?{...s.headers}:{};o.Accept||(o.Accept="application/json");let a=s.body;const i="undefined"!=typeof FormData&&a instanceof FormData;!a||i||o["Content-Type"]||(o["Content-Type"]="application/json"),a&&"application/json"===o["Content-Type"]&&"string"!=typeof a&&(a=JSON.stringify(a)),this.accessToken&&(o.Authorization=`Bearer ${this.accessToken}`);let c=await fetchWithTimeout(r,{...s,headers:o,body:a});if(401===c.status&&this.refreshToken){if(await this.refreshAccessToken()){const e=await n.getAccessToken();e&&(o.Authorization=`Bearer ${e}`,c=await fetchWithTimeout(r,{...s,headers:o,body:a}))}}const h=c.ok;let u,T;try{const e=await c.text();e&&(u=JSON.parse(e))}catch(e){T=`Failed to parse response: ${e}`}return h||T||(T=`HTTP ${c.status}: ${c.statusText}`),{data:u,error:T,status:c.status,success:h}},async refreshAccessToken(){if(this.isRefreshing&&this.refreshPromise)try{return await this.refreshPromise,!!this.accessToken}catch{return!1}if(!this.refreshToken)return!1;this.isRefreshing=!0,this.refreshPromise=(async()=>{try{const t=await fetchWithTimeout(`${e.BASE_URL}/auth/refresh`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refreshToken:this.refreshToken})});if(!t.ok)return null;const s=await t.json();return this.accessToken=s.accessToken,this.refreshToken=s.refreshToken,await n.storeTokens(this.accessToken,this.refreshToken),this.accessToken}catch{return null}})();try{return!!await this.refreshPromise}finally{this.isRefreshing=!1,this.refreshPromise=null}},async login({username:e,password:t}){const s=await this.makeSecureRequest("/auth/company-login",{method:"POST",body:{Email:e,Password:t}});if(s.success&&s.data){const{accessToken:e,refreshToken:t}=s.data;e&&t&&(await n.storeTokens(e,t),this.accessToken=e,this.refreshToken=t);const o=s.data.company?{type:"Company",...s.data.company}:s.data.user?{type:"User",...s.data.user}:null;if(o){const e="Company"===o.type?"company":"user",t=JSON.stringify(o);r.set(e,t),r.set("loggedIn","true")}}return s},async register(e){return this.makeSecureRequest("/auth/company-register",{method:"POST",body:e})},async registerWithFile(e){return this.makeSecureRequest("/auth/company-register",{method:"POST",body:e})},async logout(){try{this.refreshToken&&await this.makeSecureRequest("/auth/logout",{method:"POST",body:{refreshToken:this.refreshToken}})}catch{}this.accessToken=null,this.refreshToken=null,await n.clearTokens()},async isAuthenticated(){if(await this.initialize(),!this.accessToken||!this.refreshToken)return!1;if(await n.areTokensExpired()){if(!await this.refreshAccessToken())return!1;this.accessToken=await n.getAccessToken(),this.refreshToken=await n.getRefreshToken()}return!!this.accessToken},get(e){return this.makeSecureRequest(e,{method:"GET"})},post(e,t){const s={method:"POST"};return t&&(t instanceof FormData?s.body=t:(s.body=t,s.headers={"Content-Type":"application/json"})),this.makeSecureRequest(e,s)},put(e,t){const s={method:"PUT"};return t&&(t instanceof FormData?s.body=t:(s.body=t,s.headers={"Content-Type":"application/json"})),this.makeSecureRequest(e,s)},delete(e){return this.makeSecureRequest(e,{method:"DELETE"})},getProfile(){return this.get("/auth/company-me")}};window.SecureApiService=o}();