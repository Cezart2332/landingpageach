server {
    listen 80;
    listen [::]:80;
    server_name acoomh.ro www.acoomh.ro;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name acoomh.ro www.acoomh.ro;

    # SSL configuration (add your SSL certificate paths)
    # ssl_certificate /path/to/your/certificate.crt;
    # ssl_certificate_key /path/to/your/private.key;

    root /var/www/acoomh;
    index index.html;

    # Gzip compression (keep as-is but ensure video is excluded)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers optimized for video autoplay
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline'; media-src 'self' https: data: blob:; script-src 'self' 'unsafe-inline' https:; style-src 'self' 'unsafe-inline' https:;" always;

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # IMPORTANT: Optimized video handling for iOS/Safari
    location ~* \.(mp4)$ {
        # Root directory for videos (match your main root)
        root /var/www/acoomh;

        # Critical headers for iOS compatibility
        add_header Accept-Ranges bytes;
        add_header Content-Type video/mp4;
        gzip off;  # Disable compression for videos

        # Existing video settings
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public, max-age=2592000";
        expires 30d;

        # Ensure file exists and return 404 if not
        try_files $uri =404;

        # Enable range requests for video seeking
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;  # Changed to 204 (No Content) which is more proper
        }
    }

    # Handle other video formats (webm, ogg) separately
    location ~* \.(webm|ogg)$ {
        # Root directory for videos
        root /var/www/acoomh;
        
        add_header Accept-Ranges bytes;
        gzip off;

        # Existing settings
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public, max-age=2592000";
        expires 30d;
        try_files $uri =404;
        
        # OPTIONS handling
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Handle main routes
    location / {
        try_files $uri $uri/ /index.html;

        # Additional headers for HTML pages
        add_header Feature-Policy "autoplay 'self'";
        add_header Permissions-Policy "autoplay=(self)";
    }

    # Handle 404 errors
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/acoomh;  # Changed to match main root
        internal;
    }

    # Handle server errors (50x)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/acoomh;  # Changed to match main root
        internal;
    }
}