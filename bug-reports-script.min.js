document.body.classList.add("loading");const immediateOverlay=document.createElement("div");immediateOverlay.className="page-loading-overlay",immediateOverlay.id="pageLoadingOverlay",immediateOverlay.innerHTML='\n  <div class="loading-spinner-container">\n    <div class="modern-loading-spinner"></div>\n    <div class="loading-text">\n      Se încarcă<span class="loading-dots"></span>\n    </div>\n  </div>\n',document.body.appendChild(immediateOverlay);const API_BASE_URL="https://api.acoomh.ro";let allBugReports=[],filteredBugReports=[],currentSearchTerm="",currentStatusFilter="all",currentPriorityFilter="all",currentSortBy="newest",selectedBugReport=null;async function loadBugReports(){console.log("📡 Loading bug reports from API..."),showLoadingState();try{const e=new AbortController,t=setTimeout(()=>e.abort(),1e4),n=await fetch(`${API_BASE_URL}/api/BugReport?pageSize=100`,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json"},signal:e.signal});if(clearTimeout(t),!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const i=await n.json(),o=i.data||i;console.log("✅ Successfully loaded bug reports from API:",o.length),allBugReports=o.map(e=>({id:e.id,title:e.title,description:e.description,status:e.isResolved?"resolved":"open",priority:determinePriority(e.title,e.description),userEmail:"N/A",userName:e.username,createdAt:e.createdAt,updatedAt:e.createdAt,deviceInfo:e.deviceInfo||"N/A",appVersion:extractAppVersion(e.deviceInfo),deviceType:e.deviceType,adminNotes:e.adminNotes})),filteredBugReports=allBugReports,updateStatistics(),displayBugReports(filteredBugReports),hideLoadingState()}catch(e){console.error("❌ Error loading bug reports from API:",e),console.log("🔄 Falling back to mock data..."),loadMockData()}}function determinePriority(e,t){const n=(e+" "+t).toLowerCase();return n.includes("crash")||n.includes("închide")||n.includes("eroare critică")?"critical":n.includes("nu funcționează")||n.includes("problema")||n.includes("bug")?"high":n.includes("lent")||n.includes("încărcare")?"medium":"low"}function extractAppVersion(e){if(!e)return"N/A";const t=e.match(/v?(\d+\.\d+\.\d+)/);return t?t[1]:"N/A"}function loadMockData(){console.log("📋 Loading mock bug reports data...");const e=[{id:1,title:"Aplicația se închide când încerc să fac rezervare",description:"De fiecare dată când încerc să completez formularul de rezervare, aplicația se închide brusc. Acest lucru se întâmplă pe iPhone 12 Pro cu iOS 15.6.",status:"open",priority:"critical",userEmail:"user1@example.com",userName:"Alexandru Popescu",createdAt:"2025-08-03T10:30:00Z",updatedAt:"2025-08-03T10:30:00Z",deviceInfo:"iPhone 12 Pro, iOS 15.6",appVersion:"1.2.0",deviceType:"ios"},{id:2,title:"Imaginile restaurantelor nu se încarcă",description:"Pe pagina de rezervări, imaginile restaurantelor apar ca fiind rupte. Am încercat să reîncarc pagina dar problema persistă.",status:"open",priority:"medium",userEmail:"maria.ionescu@gmail.com",userName:"Maria Ionescu",createdAt:"2025-08-02T14:15:00Z",updatedAt:"2025-08-03T09:20:00Z",deviceInfo:"Samsung Galaxy S21, Android 12",appVersion:"1.2.0",deviceType:"android"},{id:3,title:"Problema cu autentificarea",description:"Nu pot să mă loghez în aplicație. Îmi spune că parola este greșită, dar sunt sigur că este corectă.",status:"resolved",priority:"high",userEmail:"ion.vasile@example.com",userName:"Ion Vasile",createdAt:"2025-08-01T16:45:00Z",updatedAt:"2025-08-02T10:30:00Z",deviceInfo:"Huawei P30, Android 10",appVersion:"1.1.9",deviceType:"android"},{id:4,title:"Încărcare lentă a paginii principale",description:"Pagina principală se încarcă foarte lent, durează peste 10 secunde să apară conținutul.",status:"open",priority:"low",userEmail:"ana.popescu@gmail.com",userName:"Ana Popescu",createdAt:"2025-07-30T11:20:00Z",updatedAt:"2025-07-30T11:20:00Z",deviceInfo:"iPhone 13, iOS 16.1",appVersion:"1.2.0",deviceType:"ios"},{id:5,title:"Notificările nu funcționează",description:"Nu primesc notificări pentru confirmările de rezervare, deși am activat notificările în setări.",status:"open",priority:"medium",userEmail:"george.stan@example.com",userName:"George Stan",createdAt:"2025-07-28T09:15:00Z",updatedAt:"2025-07-29T14:20:00Z",deviceInfo:"OnePlus 9, Android 11",appVersion:"1.1.8",deviceType:"android"}];allBugReports=e,filteredBugReports=e,updateStatistics(),displayBugReports(filteredBugReports),hideLoadingState(),console.log("✅ Successfully loaded mock bug reports:",e.length)}function showLoadingState(){console.log("⏳ Showing loading state..."),document.getElementById("loadingState").style.display="flex",document.getElementById("errorState").style.display="none",document.getElementById("reportsContainer").style.display="none",document.getElementById("emptyState").style.display="none"}function showErrorState(e){console.log("❌ Showing error state:",e),document.getElementById("loadingState").style.display="none",document.getElementById("errorState").style.display="flex",document.getElementById("reportsContainer").style.display="none",document.getElementById("emptyState").style.display="none",document.getElementById("errorMessage").textContent=e||"Nu am putut încărca rapoartele de bug-uri."}function hideLoadingState(){console.log("✅ Hiding loading state..."),document.getElementById("loadingState").style.display="none",document.getElementById("errorState").style.display="none"}function displayBugReports(e){const t=document.getElementById("reportsGrid"),n=document.getElementById("reportsContainer"),i=document.getElementById("emptyState");if(!e||0===e.length)return n.style.display="none",void(i.style.display="flex");n.style.display="block",i.style.display="none",t.innerHTML="",e.forEach(e=>{const n=createBugReportCard(e);t.appendChild(n)})}function createBugReportCard(e){const t=document.createElement("div");t.className="bug-report-card",t.onclick=()=>openBugModal(e);const n=new Date(e.createdAt).toLocaleDateString("ro-RO",{day:"numeric",month:"short",year:"numeric"}),i=e.priority,o=e.status;return t.innerHTML=`\n    <div class="bug-priority ${i}"></div>\n    <div class="bug-header">\n      <div>\n        <div class="bug-title">${e.title}</div>\n        <div class="bug-id">#${e.id}</div>\n      </div>\n      <div class="bug-status ${o}">${getStatusText(e.status)}</div>\n    </div>\n    <div class="bug-description">${e.description}</div>\n    <div class="bug-meta">\n      <div class="bug-user">\n        <i class="fas fa-user"></i>\n        <span>${e.userName}</span>\n      </div>\n      <div class="bug-date">${n}</div>\n    </div>\n  `,t}function getStatusText(e){return{open:"Deschis",resolved:"Rezolvat"}[e]||e}function getPriorityText(e){return{low:"Scăzută",medium:"Medie",high:"Înaltă",critical:"Critică"}[e]||e}function updateStatistics(){const e=allBugReports.filter(e=>"open"===e.status).length,t=allBugReports.filter(e=>"resolved"===e.status).length,n=document.getElementById("openBugsCount"),i=document.getElementById("resolvedBugsCount");n&&(n.textContent=e),i&&(i.textContent=t),console.log(`📊 Statistics updated: ${e} open, ${t} resolved`)}function initializeFilters(){const e=document.getElementById("statusFilter"),t=document.getElementById("priorityFilter"),n=document.getElementById("sortBy");e.addEventListener("change",function(){currentStatusFilter=this.value,applyFilters()}),t.addEventListener("change",function(){currentPriorityFilter=this.value,applyFilters()}),n.addEventListener("change",function(){currentSortBy=this.value,applyFilters()})}function initializeSearch(){const e=document.getElementById("searchInput");e&&e.addEventListener("input",function(){currentSearchTerm=this.value.trim().toLowerCase(),applyFilters()})}function applyFilters(){let e=[...allBugReports];"all"!==currentStatusFilter&&(e=e.filter(e=>e.status===currentStatusFilter)),"all"!==currentPriorityFilter&&(e=e.filter(e=>e.priority===currentPriorityFilter)),currentSearchTerm&&(e=e.filter(e=>e.title.toLowerCase().includes(currentSearchTerm)||e.description.toLowerCase().includes(currentSearchTerm)||e.userName.toLowerCase().includes(currentSearchTerm))),e.sort((e,t)=>{switch(currentSortBy){case"newest":return new Date(t.createdAt)-new Date(e.createdAt);case"oldest":return new Date(e.createdAt)-new Date(t.createdAt);case"priority":const n={critical:4,high:3,medium:2,low:1};return n[t.priority]-n[e.priority];case"status":const i={open:2,resolved:1};return i[t.status]-i[e.status];default:return 0}}),filteredBugReports=e,displayBugReports(filteredBugReports)}function openBugModal(e){selectedBugReport=e;const t=document.getElementById("bugModal"),n=document.getElementById("modalTitle"),i=document.getElementById("modalBody");n.textContent=`Bug Report #${e.id}`;const o=new Date(e.createdAt).toLocaleString("ro-RO");i.innerHTML=`\n    <div style="margin-bottom: 20px;">\n      <h3 style="color: var(--text-primary); margin-bottom: 10px;">${e.title}</h3>\n      <div style="display: flex; gap: 15px; margin-bottom: 15px;">\n        <span class="bug-status ${e.status}">${getStatusText(e.status)}</span>\n        <span style="background: rgba(139, 92, 246, 0.1); color: var(--primary-color); padding: 4px 12px; border-radius: 20px; font-size: 0.8rem; font-weight: 600;">\n          Prioritate ${getPriorityText(e.priority)}\n        </span>\n      </div>\n    </div>\n    \n    <div style="margin-bottom: 20px;">\n      <h4 style="color: var(--text-primary); margin-bottom: 8px;">Descriere:</h4>\n      <p style="color: var(--text-secondary); line-height: 1.6;">${e.description}</p>\n    </div>\n    \n    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">\n      <div>\n        <h4 style="color: var(--text-primary); margin-bottom: 8px;">Utilizator:</h4>\n        <p style="color: var(--text-secondary);">${e.userName}</p>\n      </div>\n      <div>\n        <h4 style="color: var(--text-primary); margin-bottom: 8px;">Detalii tehnice:</h4>\n        <p style="color: var(--text-secondary); font-size: 0.9rem;">Dispozitiv: ${e.deviceInfo||"N/A"}</p>\n        <p style="color: var(--text-secondary); font-size: 0.9rem;">Tip: ${e.deviceType||"N/A"}</p>\n        <p style="color: var(--text-secondary); font-size: 0.9rem;">Versiune app: ${e.appVersion||"N/A"}</p>\n      </div>\n    </div>\n    \n    <div style="display: grid; grid-template-columns: 1fr; gap: 20px;">\n      <div>\n        <h4 style="color: var(--text-primary); margin-bottom: 8px;">Creat la:</h4>\n        <p style="color: var(--text-secondary); font-size: 0.9rem;">${o}</p>\n      </div>\n    </div>\n    \n    ${e.adminNotes?`\n      <div style="margin-top: 20px;">\n        <h4 style="color: var(--text-primary); margin-bottom: 8px;">Note admin:</h4>\n        <p style="color: var(--text-secondary); font-size: 0.9rem;">${e.adminNotes}</p>\n      </div>\n    `:""}\n    \n    <div style="margin-top: 20px;">\n      <h4 style="color: var(--text-primary); margin-bottom: 8px;">Actualizează status:</h4>\n      <select id="modalStatusSelect" style="width: 100%; padding: 10px; background: var(--card-bg); border: 1px solid var(--border-color); border-radius: 8px; color: var(--text-primary);">\n        <option value="open" ${"open"===e.status?"selected":""}>Deschis</option>\n        <option value="resolved" ${"resolved"===e.status?"selected":""}>Rezolvat</option>\n      </select>\n    </div>\n  `,t.style.display="flex",setTimeout(()=>t.classList.add("show"),10)}function closeBugModal(){const e=document.getElementById("bugModal");e.classList.remove("show"),setTimeout(()=>{e.style.display="none",selectedBugReport=null},300)}async function updateBugStatus(){if(!selectedBugReport)return;const e=document.getElementById("modalStatusSelect").value,t=document.getElementById("updateStatusBtn"),n=t.textContent;t.disabled=!0,t.textContent="Se actualizează...";try{const t=allBugReports.findIndex(e=>e.id===selectedBugReport.id);-1!==t&&(allBugReports[t].status=e),updateStatistics(),applyFilters(),closeBugModal(),showNotification("Status actualizat local (backend nu suportă încă)","info")}catch(e){console.error("Error updating bug status:",e),showNotification("Eroare la actualizarea statusului","error")}finally{t.disabled=!1,t.textContent=n}}function showNotification(e,t="info"){const n=document.createElement("div");n.style.cssText=`\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    background: ${"success"===t?"var(--success-color)":"error"===t?"var(--error-color)":"var(--info-color)"};\n    color: white;\n    padding: 15px 20px;\n    border-radius: 10px;\n    font-weight: 600;\n    z-index: 10000;\n    transform: translateX(400px);\n    transition: transform 0.3s ease;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n  `,n.textContent=e,document.body.appendChild(n),setTimeout(()=>{n.style.transform="translateX(0)"},100),setTimeout(()=>{n.style.transform="translateX(400px)",setTimeout(()=>{document.body.contains(n)&&document.body.removeChild(n)},300)},3e3)}function setupNavigation(){document.querySelectorAll('a[href*=".html"]').forEach(e=>{e.addEventListener("click",function(e){const t=this.getAttribute("href");!t||!t.includes(".html")||t.startsWith("http")||t.startsWith("mailto")||t.startsWith("tel")||(e.preventDefault(),navigateWithLoading(t))})})}function createLoadingOverlay(){const e=document.createElement("div");return e.className="page-loading-overlay",e.id="pageLoadingOverlay",e.innerHTML='\n    <div class="loading-spinner-container">\n      <div class="modern-loading-spinner"></div>\n      <div class="loading-text">\n        Se încarcă<span class="loading-dots"></span>\n      </div>\n    </div>\n  ',document.body.appendChild(e),e}function showLoadingOverlay(){document.body.classList.add("loading"),document.body.classList.remove("loaded");let e=document.getElementById("pageLoadingOverlay");e||(e=createLoadingOverlay()),e.classList.remove("hidden")}function hideLoadingOverlay(){const e=document.getElementById("pageLoadingOverlay");e&&(e.classList.add("hidden"),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},500)),document.body.classList.remove("loading"),document.body.classList.add("loaded")}function navigateWithLoading(e){clearTimeout(window.loadingTimeout),showLoadingOverlay(),window.location.href=e}document.addEventListener("DOMContentLoaded",function(){try{console.log("🚀 Initializing bug reports page..."),initializeFilters(),initializeSearch(),loadBugReports(),setTimeout(()=>{hideLoadingOverlay()},800),setupNavigation()}catch(e){console.error("Bug reports page initialization error:",e),hideLoadingOverlay(),showErrorState("Eroare la inițializarea paginii")}}),document.addEventListener("visibilitychange",function(){document.hidden||setTimeout(()=>{const e=document.getElementById("pageLoadingOverlay");e&&!e.classList.contains("hidden")&&hideLoadingOverlay()},100)}),window.addEventListener("pageshow",function(e){e.persisted&&hideLoadingOverlay()}),window.addEventListener("beforeunload",function(){showLoadingOverlay()}),window.loadBugReports=loadBugReports,window.closeBugModal=closeBugModal,window.updateBugStatus=updateBugStatus;